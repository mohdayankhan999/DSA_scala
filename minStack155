class MinStack() {
    
    import scala.collection.mutable.Stack
    
    val stack = Stack[(Int, Int)]()
    
    def push(value: Int) {
        val minElement = if(stack.nonEmpty && stack.top._2 < value) stack.top._2 else value
        val newElement = (value, minElement)
        stack.push(newElement)
    }

    def pop() = stack.pop

    def top(): Int = {
        if(stack.nonEmpty) stack.top._1
        else throw new NoSuchElementException("Stack is empty") // use of throw, discussion
    }

    def getMin(): Int = {
        if(stack.nonEmpty) stack.top._2
        else throw new NoSuchElementException("Stack is empty") // we can do this in scala
    }
	
}

/**
 * Your MinStack object will be instantiated and called as such:
 * var obj = new MinStack()
 * obj.push(`val`)
 * obj.pop()
 * var param_3 = obj.top()
 * var param_4 = obj.getMin()
 */
