object Solution {
    
     def rob(nums: Array[Int]): Int = {
        def rob_(remaining: List[Int], twoHousesBack: Int, oneHouseBack: Int): Int = {
            remaining match {
                case Nil => oneHouseBack
                case house :: rest =>
                    rob_(rest, oneHouseBack, (twoHousesBack + house) max oneHouseBack)
            }
        }
        rob_(nums.tail.toList, 0, nums.head)
    }
    
//     def rob(nums: Array[Int]): Int = {
//         if(nums.size == 1)
//             return nums(0)
//         if(nums.size == 2)
//             return nums(0) max nums(1)
        
//         var dp = Array.fill(nums.size)(0)
//         dp(0) = nums(0)
//         dp(1) = nums(1) max nums(0)
 
//         for(i <- 2 until nums.size) {
//             dp(i) = (nums(i) + dp(i-2)) max  dp(i-1)
//         }
//         return dp(nums.size - 1)
//     }

}
